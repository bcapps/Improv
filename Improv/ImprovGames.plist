<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Games</key>
	<array>
		<dict>
			<key>Image</key>
			<string>10fingers</string>
			<key>Title</key>
			<string>10 Fingers</string>
			<key>Description</key>
			<string>Great game for getting to know each other in a new group. All players in a circle, holding all 10 fingers up in the air. One person at a time, start asking personal questions that take yes-no answers, whoever cannot answer yes to a question, drops a finger. Last person with a finger left wins. Good questions are things like &quot;I have a cat&quot;, &quot;I have never stolen anything&quot; and so on.</string>
			<key>Tags</key>
			<array>
				<string>Icebreakers</string>
				<string>Warmup</string>
			</array>
			<key>MinPlayers</key>
			<integer>4</integer>
			<key>MaxPlayers</key>
			<integer>0</integer>
			<key>MinTime</key>
			<integer>2</integer>
			<key>MaxTime</key>
			<integer>10</integer>
			<key>AudienceParticipation</key>
			<false/>
			<key>timerCountsUp</key>
			<true/>
			<key>Buzzer</key>
			<false/>
			<key>Variations</key>
			<array/>
		</dict>
        <dict>
			<key>Image</key>
			<string>3series</string>
			<key>Title</key>
			<string>3 Series</string>
			<key>Description</key>
			<string>Everyone in a circle. Pick a category (e.g. make of cars, girls names kinds of food, kinds of plants, whatever). First person states an example of the category, and points to someone else. Keep pointing. That someone else does the same, with a different item in the category, and so forth, until everyone points at one person. Then repeat the pattern. Make eye contact when passing your item to the next person. Drop the pointing arms when everyone is comfortable and the series is collectively memorized. Then do the same with a second category, and make sure the pointing pattern is different. Repeat till everyone is comfortable. Then do the same exercise, without pointing, and running the 2 categories at the same time. Add a third, fourth category if you wish. No pointing arms any more! The idea is not only to listen for the item right before yours in the series (so you know when it`s your turn), but also to make sure that when you pass an item to someone else, that someone else actually hears you. If not, then repeat your item, to ensure the series does not get broken.</string>
			<key>Tags</key>
			<array>
				<string>Concentration</string>
				<string>Exercise</string>
				<string>Look and Listen</string>
			</array>
			<key>MinPlayers</key>
			<integer>4</integer>
			<key>MaxPlayers</key>
			<integer>0</integer>
			<key>MinTime</key>
			<integer>2</integer>
			<key>MaxTime</key>
			<integer>4</integer>
			<key>AudienceParticipation</key>
			<false/>
			<key>timerCountsUp</key>
			<true/>
			<key>Buzzer</key>
			<false/>
			<key>Variations</key>
			<array/>
		</dict>
        <dict>
			<key>Image</key>
			<string>3some</string>
			<key>Title</key>
			<string>3 Some</string>
			<key>Description</key>
			<string>Fun warm-up. One player offers something, e.g. I am a slice of cheese. 2nd player jumps in and adds something to the offer, e.g. I am a slice of bread. 3rd player jumps in and again adds to the setup, e.g. I am a pickle. First player leaves, taking one of the others with him. Restart from the remaining player, who restarts by saying what/who she is.</string>
			<key>Tags</key>
			<array>
				<string>Association</string>
				<string>Warm-up</string>
			</array>
			<key>MinPlayers</key>
			<integer>4</integer>
			<key>MaxPlayers</key>
			<integer>0</integer>
			<key>MinTime</key>
			<integer>1</integer>
			<key>MaxTime</key>
			<integer>5</integer>
			<key>AudienceParticipation</key>
			<false/>
			<key>timerCountsUp</key>
			<true/>
			<key>Buzzer</key>
			<false/>
			<key>Variations</key>
			<array/>
		</dict>
        <dict>
			<key>Image</key>
			<string>AcceptingCircle</string>
			<key>Title</key>
			<string>Accepting Circle</string>
			<key>Description</key>
			<string>Get everyone in a big circle. One player starts by making a little gesture perhaps with a little sound. His or her neighbor then tries and does exactly the same. And so on. Although we expect the gesture/sound not to change, it will. Notes Watch for movements that suddenly change left/right arm or leg. This is not really supposed to happen, but it will. Once happened, it should be accepted by the next player. Also watch/listen for little moans or sighs that players might make before or after their turn - these should also be taken over by the next player.</string>
			<key>Tags</key>
			<array>
				<string>Accepting</string>
				<string>Concentration</string>
				<string>Exercise</string>
				<string>Warm-up</string>
			</array>
			<key>MinPlayers</key>
			<integer>4</integer>
			<key>MaxPlayers</key>
			<integer>0</integer>
			<key>MinTime</key>
			<integer>2</integer>
			<key>MaxTime</key>
			<integer>10</integer>
			<key>AudienceParticipation</key>
			<false/>
			<key>timerCountsUp</key>
			<true/>
			<key>Buzzer</key>
			<false/>
			<key>Variations</key>
			<array/>
		</dict>
        <dict>
			<key>Image</key>
			<string>Narrative</string>
			<key>Title</key>
			<string>Narrative, Color, Emotion</string>
			<key>Description</key>
			<string>One players tells a story, solo. Other players tag the player if they want to hear more action (narrative), more emotion or more color. By color we mean environmental detail, as in how does it smell, temperature, weather, colors, sounds.</string>
			<key>Tags</key>
			<array>
				<string>Environment</string>
				<string>Exercise</string>
				<string>Narration</string>
				<string>Object Work</string>
				<string>Solo</string>
			</array>
			<key>MinPlayers</key>
			<integer>2</integer>
			<key>MaxPlayers</key>
			<integer>4</integer>
			<key>MinTime</key>
			<integer>2</integer>
			<key>MaxTime</key>
			<integer>10</integer>
			<key>AudienceParticipation</key>
			<false/>
			<key>timerCountsUp</key>
			<true/>
			<key>Buzzer</key>
			<false/>
			<key>Variations</key>
			<array/>
		</dict>
        <dict>
			<key>Image</key>
			<string>ActionSyllables</string>
			<key>Title</key>
			<string>Action Syllables</string>
			<key>Description</key>
			<string>Great warm-up that also helps a new group to learn each other's names. Everyone in a circle. First person says his name, making a gesture (an action) for every syllable. Mary has 2 syllables, so she does something like "Ma-" (wave right hand) "-ry" (claps in hands). Everyone repeats this. Then the second person calls his name, again with a gesture per syllable. Group repeats, and then repeats all previous names and syllables.</string>
			<key>Tags</key>
			<array>
				<string>Concentration</string>
				<string>Energy</string>
				<string>Warm-up</string>
				<string>Icebreaker</string>
			</array>
			<key>MinPlayers</key>
			<integer>4</integer>
			<key>MaxPlayers</key>
			<integer>0</integer>
			<key>MinTime</key>
			<integer>2</integer>
			<key>MaxTime</key>
			<integer>10</integer>
			<key>AudienceParticipation</key>
			<false/>
			<key>timerCountsUp</key>
			<true/>
			<key>Buzzer</key>
			<false/>
			<key>Variations</key>
			<array/>
		</dict>
        <dict>
			<key>Image</key>
			<string>SimpleContinuation</string>
			<key>Title</key>
			<string>Simple Continuation</string>
			<key>Description</key>
			<string>A scene is started, played by 2 to 4 players. Mid-scene the MC interrupts, and all characters are replaced by new players. The new players should take over the original characters, and stick to the story that was being developed.</string>
			<key>Tags</key>
			<array>
				<string>Continuation</string>
				<string>Performance</string>
			</array>
			<key>MinPlayers</key>
			<integer>2</integer>
			<key>MaxPlayers</key>
			<integer>0</integer>
			<key>MinTime</key>
			<integer>2</integer>
			<key>MaxTime</key>
			<integer>6</integer>
			<key>AudienceParticipation</key>
			<false/>
			<key>timerCountsUp</key>
			<true/>
			<key>Buzzer</key>
			<false/>
			<key>Variations</key>
			<array/>
		</dict>
        <dict>
			<key>Image</key>
			<string>Switcheroo</string>
			<key>Title</key>
			<string>Switcheroo</string>
			<key>Description</key>
			<string>This is like Simple Continuation, except that the MC interrupts the scene several times, and at each interruption all actors in the scene get switched, no new actors join in, and no actors leave.</string>
			<key>Tags</key>
			<array>
				<string>Continuation</string>
				<string>Performance</string>
			</array>
			<key>MinPlayers</key>
			<integer>2</integer>
			<key>MaxPlayers</key>
			<integer>0</integer>
			<key>MinTime</key>
			<integer>3</integer>
			<key>MaxTime</key>
			<integer>8</integer>
			<key>AudienceParticipation</key>
			<false/>
			<key>timerCountsUp</key>
			<true/>
			<key>Buzzer</key>
			<false/>
			<key>Variations</key>
			<array/>
		</dict>
        <dict>
			<key>Image</key>
			<string>Actor'sNightmare</string>
			<key>Title</key>
			<string>Actor's Nightmare</string>
			<key>Description</key>
			<string>This one is played by 2 players, one of which gets their lines on paper (like a script). The other player should justify whatever the scripted player says. Notes: You can use existing plays for this, but also lines from comics. Whoever gets the script should not forget to play/act - only his/her lines are defined, not what he/she does, or how he/she does the lines.</string>
			<key>Tags</key>
			<array>
				<string>Limitations</string>
				<string>Performance</string>
				<string>Prop</string>
			</array>
			<key>MinPlayers</key>
			<integer>2</integer>
			<key>MaxPlayers</key>
			<integer>2</integer>
			<key>MinTime</key>
			<integer>2</integer>
			<key>MaxTime</key>
			<integer>6</integer>
			<key>AudienceParticipation</key>
			<false/>
			<key>timerCountsUp</key>
			<true/>
			<key>Buzzer</key>
			<false/>
			<key>Variations</key>
			<array/>
		</dict>
        <dict>
			<key>Image</key>
			<string>AdjectiveScene</string>
			<key>Title</key>
			<string>Adjective Scene</string>
			<key>Description</key>
			<string>Ask for an adjective (e.g. sad). Play a scene in which the players are as sad as possible. Alternatively, give every player a different adjective.</string>
			<key>Tags</key>
			<array>
				<string>Limitations</string>
				<string>Performance</string>
			</array>
			<key>MinPlayers</key>
			<integer>4</integer>
			<key>MaxPlayers</key>
			<integer>0</integer>
			<key>MinTime</key>
			<integer>2</integer>
			<key>MaxTime</key>
			<integer>10</integer>
			<key>AudienceParticipation</key>
			<false/>
			<key>timerCountsUp</key>
			<true/>
			<key>Buzzer</key>
			<false/>
			<key>Variations</key>
			<array/>
		</dict>
        <dict>
			<key>Image</key>
			<string>MakeMoreInteresting</string>
			<key>Title</key>
			<string>Make More Interesting</string>
			<key>Description</key>
			<string>Simple exercise, useful for players that are too verbal. One player starts a scene. As soon as the trainer claps his hands, the player needs to make whatever he was doing more interesting, without advancing. If our player was opening a briefcase at the clap, he needs to make opening a briefcase more interesting, he is not allowed to take something out of the briefcase, as that would be advancing, player needs to stick to opening the briefcase. Notes Simple to explain but not so easy to play. When done well you move into the clownesque. Think about Chaplin, Laurel Hardy or Mr. Bean.</string>
			<key>Tags</key>
			<array>
				<string>Exercise</string>
			</array>
			<key>MinPlayers</key>
			<integer>2</integer>
			<key>MaxPlayers</key>
			<integer>0</integer>
			<key>MinTime</key>
			<integer>2</integer>
			<key>MaxTime</key>
			<integer>4</integer>
			<key>AudienceParticipation</key>
			<false/>
			<key>timerCountsUp</key>
			<true/>
			<key>Buzzer</key>
			<false/>
			<key>Variations</key>
			<array>
				<string>At a second clap, allow the player to advance the scene.</string>
            </array>
            </dict>
            <dict>
                <key>Image</key>
                <string>Aerobics</string>
                <key>Title</key>
                <string>Aerobics</string>
                <key>Description</key>
                <string>This is a fun observation game. Place all players in a line. The first player starts walking around the room walking a large circle. The second player starts following the first one and tries to move like the first player. After a few rounds, the first player goes to the back of the line, and the third player starts following and imitating the second one. Notes Tell players to be themselves, don`t try and walk around funny (it`s not the Ministry of Silly Walks after all).</string>
                <key>Tags</key>
                <array>
                    <string>Characters</string>
                    <string>Exercise</string>
                    <string>Icebreaker</string>
                    <string>Look and Listen</string>
                </array>
                <key>MinPlayers</key>
                <integer>4</integer>
                <key>MaxPlayers</key>
                <integer>0</integer>
                <key>MinTime</key>
                <integer>2</integer>
                <key>MaxTime</key>
                <integer>4</integer>
                <key>AudienceParticipation</key>
                <false/>
                <key>timerCountsUp</key>
                <true/>
                <key>Buzzer</key>
                <false/>
                <key>Variations</key>
                <array/>
            </dict>
            <dict>
                <key>Image</key>
                <string>ThreeRules</string>
                <key>Title</key>
                <string>Three Rules</string>
                <key>Description</key>
                <string>Get 3 rules from the audience, e.g. players have only one arm, players can`t use a word that contains an `s` and after every question uttered players needs to yell `Yess!`. Players then play a scene, obeying the 3 rules. For examples of what else might be used as a rule see the other games with a Limitation Tag</string>
                <key>Tags</key>
                <array>
                    <string>Limitations</string>
                    <string>Performance</string>
                </array>
                <key>MinPlayers</key>
                <integer>4</integer>
                <key>MaxPlayers</key>
                <integer>0</integer>
                <key>MinTime</key>
                <integer>4</integer>
                <key>MaxTime</key>
                <integer>12</integer>
                <key>AudienceParticipation</key>
                <true/>
                <key>timerCountsUp</key>
                <true/>
                <key>Buzzer</key>
                <false/>
                <key>Variations</key>
                <array/>
            </dict>
            <dict>
                <key>Image</key>
                <string>BlindLead</string>
                <key>Title</key>
                <string>Blind Lead</string>
                <key>Description</key>
                <string>One player is blindfolded, and the room is filled with obstacles (put a couple of chairs everywhere, leave all kinds of junk on the floor). The idea is that the rest of the group will lead the blindfolded player through the room, by talking. A helpful reader offered us an explanation for the name `Airplane`: The blindfoldee (or just eyes closed) is led through a maze composed of furniture and the other actors. He is an "Airplane" lost in the fog being talked down by the "Air Traffic Controller", who must remain in his/her "Tower". Standing on a chair/rehearsal block lends visibility for the controller. The airplane also only has a limited amount of fuel left (1-3 minutes, whatever) to reach a safe landing (arriving at the Tower). The airplane is also allowed two "brushes"-limited contact with an obstacle. The third brush or a direct hit or stepping on something directly causes a "crash". They may step around, over or under the obstacles. Also, the airplane can only fly forward. It can turn in any direction, however. The directions must be given from the pilot`s point of view, a good exercise for fledgling directors. You can also destroy all the trust you`ve built up in your class by completely clearing the deck and torturing the Pilot. Believe us someone will suggest it.</string>
                <key>Tags</key>
                <array>
                    <string>Exercise</string>
                    <string>Group</string>
                    <string>Trust</string>
                </array>
                <key>MinPlayers</key>
                <integer>2</integer>
                <key>MaxPlayers</key>
                <integer>0</integer>
                <key>MinTime</key>
                <integer>1</integer>
                <key>MaxTime</key>
                <integer>3</integer>
                <key>AudienceParticipation</key>
                <false/>
                <key>timerCountsUp</key>
                <true/>
                <key>Buzzer</key>
                <false/>
                <key>Variations</key>
                <array/>
            </dict>		

			</array>
</dict>
</plist>
